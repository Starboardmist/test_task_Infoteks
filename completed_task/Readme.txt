# Реализация автоматизированной сборки библиотеки под Linux/Windows с использованием CMake на примере SQLite.

---

## Необходимо:
1. Скачать архив: https://www.sqlite.org/2018/sqlite-amalgamation-3260000.zip

2. Изучить руководство по сборке SQLite: https://www.sqlite.org/howtocompile.html

3. Написать CMakeLists.txt для компиляции исходников под
- Windows (x86/x86_64) только .dll при помощи MSVC+
- Linux (x86/x86_64) только .so при помощи gcc.

 Запустить процесс компиляции, получить лог компиляции и итоговые библиотеки. Если в процессе возникнут
 ошибки желательно описать процесс их решения в Readme.

4. Создать Docker и предоставить Dockerfile для инициализации легковесного сборочного окружения с gcc, в
котором можно собрать .so библиотеки SQLite.

5. Подготовить виртуальную машину с операционной системой GNU/Linux (любой дистрибутив,
предпочтительно Debian) в среде VirtualBox, автоматизированно, используя на выбор одно из средств:
vboxmanage / vagrant / packer.

6. Подготовить ansible-playbook, который устанавливает на созданную вами виртуальную машину пакет Docker
из репозитория.

Подсказка: для свежей версии Docker стоит поискать зеркалирующие репозитории.

7. Подготовить ansible-playbook, который выполняет пункты 1, 3b (с запуском компилятора и получением лога /
библиотеки), 4.

8. Подготовить простую исполняемую программу на C++, которая использует любую стороннюю зависимость,
доступную через пакетный менеджер Conan. Реализовать пример сборки бинарного файла этой программы с
использованием conanfile.py, а также CMake и любого компилятора в ОС Linux.

Пункты 1–4 обязательны для выполнения, пункты 5–8 являются дополнительными (выполнение по
желанию).
---
## Зависимости
- Docker
- Ansible
- Ansible role [geerlingguy.docker](https://galaxy.ansible.com/ui/standalone/roles/geerlingguy/docker/)
- Vagrant
- VirtualBox
- build-essential
- cmake
- libreadline-dev
- libncurses-dev

---

## Инструкция получения сборочного docker образа и сборки libsqlite3.so
В рабочей директории должны находиться следующие файлы:
  - sqlite3.c
  - sqlite3.h
  - sqlite3ext.h
  - shell.c
  - CMakeLists.txt         (описание сборки через CMake)
  - Dockerfile             (сборка и упаковка)

Формат директории:
---
.
├── CMakeLists.txt
├── Dockerfile
├── shell.c
├── sqlite3.c
├── sqlite3.h
└── sqlite3ext.h

Шаги для сборки Docker-образа и библиотеки:
---

1. Открыть терминал в текущей директории.
2. Собрать Docker-образ: docker build -t sqlite3-builder .

---

## Скрипт создания виртуальной машины
В рабочей директории должны находиться следующие файлы:
  - Vagrantfile

Шаги для запуска ВМ из скрипта:
---
1. Открыть терминал в текущей директории.
2. Запустить создание ВМ: vagrant up

---

## Скрипт конфигурации виртуальной машины, для установки Docker, выполнения пунктов 1, 3b, 4.
В рабочей директории должны находиться следующие файлы:

  - ansible.cfg
  - inventory.ini
  - playbook.yaml
  - CMakeLists.txt         (описание сборки через CMake)
  - Dockerfile             (сборка и упаковка)

Шаги для запуска ВМ из скрипта:
---
1. Открыть терминал в текущей директории.
2. Запустить конфигурацию ВМ через Ansible: ansible-playbook playbook.yaml